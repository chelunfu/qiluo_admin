//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_menu")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub name: Option<String>,
    pub title: String,
    pub i18nkey: Option<String>,
    pub pid: i64,
    pub order: i32,
    pub path: Option<String>,
    pub component: Option<String>,
    pub redirect: Option<String>,
    pub href: Option<String>,
    pub no_cache: String,
    pub menu_type: String,
    pub hidden: String,
    pub active_menu: String,
    pub always_show: String,
    pub breadcrumb: String,
    pub affix: String,
    pub no_tags_view: String,
    pub can_to: String,
    pub status: String,
    pub perms: Option<String>,
    pub icon: Option<String>,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
    pub remark: Option<String>,
    pub deleted_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::sys_role_menu::Entity")]
    SysRoleMenu,
}

impl Related<super::sys_role_menu::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SysRoleMenu.def()
    }
}

impl Related<super::sys_role::Entity> for Entity {
    fn to() -> RelationDef {
        super::sys_role_menu::Relation::SysRole.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::sys_role_menu::Relation::SysMenu.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
